apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: '{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}'
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          ports:
            - containerPort: 80
              name: http
          env:
            - name: NODE_ENV
              value: 'production'
            - name: API_TARGET
              value: '{{ .Values.app.env.API_TARGET }}'
            - name: DEX_TARGET
              value: '{{ .Values.app.env.DEX_TARGET }}'
            - name: DASHBOARD_TARGET
              value: '{{ .Values.app.env.DASHBOARD_TARGET }}'
            - name: GRAFANA_TARGET
              value: '{{ .Values.app.env.GRAFANA_TARGET }}'
            - name: COG_TARGET
              value: '{{ .Values.app.env.COG_TARGET }}'
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
